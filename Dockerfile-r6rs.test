ARG SCHEME=guile
ARG IMAGE=${SCHEME}:head
FROM debian:trixie AS build
RUN apt-get update && apt-get install -y \
    gcc make git ca-certificates libffi-dev wget xz-utils
WORKDIR /build
RUN wget https://gitlab.com/-/project/6808260/uploads/094ce726ce3c6cf8c14560f1e31aaea0/akku-1.1.0.amd64-linux.tar.xz \
    && tar -xf akku-1.1.0.amd64-linux.tar.xz \
    && mv akku-1.1.0.amd64-linux akku
RUN git clone https://github.com/ashinn/chibi-scheme.git --depth=1
RUN git clone https://gitea.scheme.org/Retropikzel/compile-r7rs.git --depth=1
WORKDIR /build/chibi-scheme
RUN make

ARG SCHEME=guile
ARG IMAGE=${SCHEME}:head
FROM schemers/${IMAGE}
COPY --from=build /build /build
WORKDIR /build
RUN apt-get update && apt-get install -y gcc make libffi-dev libcurl4
WORKDIR /build/chibi-scheme
RUN make install
RUN mkdir -p ${HOME}/.snow && echo "()" > ${HOME}/.snow/config.scm
RUN snow-chibi install --always-yes "(foreign c)"
RUN snow-chibi install --always-yes "(srfi 170)"
WORKDIR /build/compile-r7rs
RUN make build-chibi && make install
WORKDIR /build/akku
RUN bash install.sh
ENV PATH=/root/.local/bin:${PATH}
WORKDIR /workdir
ARG SCHEME=guile
ENV COMPILE_R7RS=${SCHEME}
RUN akku update
RUN akku init test-project
WORKDIR /workdir/test-project
RUN akku install "(srfi 64)"
RUN akku install "(foreign c)"
RUN apt-get install -y tree
RUN tree .akku
COPY Makefile .
COPY test.scm .
COPY tests ./tests
COPY foreign ./foreign
